---

# It expects the facts:
# compose_name: docker_compose name
# docker_service: docker service struct

- name: docker_service
  debug:
    var: "docker_service"

- name: Create docker volumes root folder
  become: yes
  file:
    path: "{{ docker_volumes_path }}/{{ compose_name }}"
    recurse: yes
    state: directory

- name: Check if each volume directory exists
  stat:
    path: "{{ docker_volumes_path }}/{{ compose_name }}/{{ volume_name }}"
  loop: "{{ docker_service.volumes.keys() }}"
  loop_control:
    loop_var: volume_name
  register: volume_names

- name: Create dirs for volumes
  become: yes
  file:
    path: "{{ docker_volumes_path }}/{{ compose_name }}/{{ volume_name }}"
    state: directory
  loop: "{{ docker_service.volumes.keys() }}"
  loop_control:
    loop_var: volume_name


- name: Synchronize missing volumes from NAS backup
  ansible.builtin.include_role:
    name: system
    tasks_from: rsync
  vars:
    copy:
      from: "rsync://{{ nas.backup.user }}@{{ nas.host }}{{ nas.backup.share }}/docker/{{ compose_name }}/{{ volume }}"
      to: "{{ docker_volumes_path }}/{{ compose_name }}/{{ volume }}/"
      user: "{{ nas.backup.user }}"
      password: "{{ nas.backup.password }}"
      compressed: !!str "true"
  when:
    - not volume_names.results[item_index].stat.exists
  loop: "{{ docker_service.volumes.keys() }}"
  loop_control:
    index_var: item_index
    loop_var: volume